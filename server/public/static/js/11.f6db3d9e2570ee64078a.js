(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"ip9/":function(n,t,i){},oMuh:function(n,t,i){"use strict";var s=i("ip9/");i.n(s).a},ubpp:function(n,t,i){"use strict";i.r(t);var s=i("L2nY"),e=i.n(s),r=(i("SJYc"),i("1HFd")),p=i.n(r),a={data:function(){return{markDown:"```html\n <p>asdsad</p> \n ```"}},computed:{markedToHtml:function(){var n=new e.a.Renderer;return e.a.setOptions({renderer:n,gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1,highlight:function(n){return p.a.highlightAuto(n).value}}),e()(this.markDown)}},mounted:function(){this.markDown=this.$refs.tpl.innerHTML}},o=(i("oMuh"),i("KHd+")),u=Object(o.a)(a,function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"marked"},[t("div",{domProps:{innerHTML:this._s(this.markedToHtml)}}),this._v(" "),t("div",{ref:"tpl",staticStyle:{display:"none"}},[this._v('\n    # Gulp生成雪碧图\n\n    ```js\n    // clone 到本地\n    git clone https://github.com/123428653/gulp-sprites.git\n\n    //进入到clone的目录下\n    cd gulp-sprites\n\n    //安装项目依赖\n    npm i 或者 cnpm i  \n\n    //运行gulp，即可把images目录下的图片合并为雪碧图然后导出到dist目录下\n    gulp\n\n\n    ```\n\n    利用gulp、gulp.spritesmith库把png格式的图片合并为雪碧图\n\n    ```js\n    var gulp=require("gulp"),\n        spritesmith=require(\'gulp.spritesmith\');\n\n    /**\n    * \n    * 注释1：此选项有5种生成图片排列的方式分别为: \n    * top-down、left-rught、diagonal、alt-diagonal、binary-tree\n    * \n    */\n\n    gulp.task(\'default\', function () {\n\n        return gulp.src(\'images/*.png\')//需要合并的图片地址\n            .pipe(spritesmith({\n                imgName: \'sprite.png\',//保存合并后图片的地址\n                cssName: \'css/sprite.css\',//保存合并后对于css样式的地址\n                padding:5,//合并时两个图片的间距\n                algorithm: \'top-down\',//注释1\n                //cssTemplate:"css/handlebarsStr.css"\n                cssTemplate: function (data) {  //注释2\n                    var arr=[];\n                    data.sprites.forEach(function (sprite) {\n                        arr.push(".icon-"+sprite.name+\n                        "{" +\n                        "background-image: url(\'"+sprite.escaped_image+"\');"+\n                        "background-position: "+sprite.px.offset_x+" "+sprite.px.offset_y+";"+\n                        "width:"+sprite.px.width+";"+\n                        "height:"+sprite.px.height+";"+\n                        "}\\n");\n                    });\n                    return arr.join("");\n                }\n\n            }))\n            .pipe(gulp.dest(\'dist/\'));\n    });\n    ```\n\n\n    ```js\n\n    /**\n    * \n    * 注释2：cssTemplate 是生成css的模板文件可以是字符串也可以是函数。\n    * 是字符串是对于相对于的模板地址 对于模板文件样式格式是：\n    * \n    */\n      '),[this._v('\n      {{#sprites}}\n      .icon-{{name}}{\n          background-image: url("{{escaped_image}}");\n          background-position: {{px.offset_x}} {{px.offset_y}};\n          width: {{px.width}};\n          height: {{px.height}};\n      }\n      {{/sprites}}\n      ')],this._v("\n    ```\n  ")],2)])},[],!1,null,"6c369db2",null);u.options.__file="markedHighlight.vue";t.default=u.exports}}]);